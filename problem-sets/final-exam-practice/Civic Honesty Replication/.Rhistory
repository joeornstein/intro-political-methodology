knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE) # show the code, but not the warnings/errors
knitr::opts_chunk$set(fig.pos = 'p') # Places figures on pages separate from text
knitr::opts_chunk$set(out.width = '100%', dpi=300) # Figure resolution and size
knitr::opts_chunk$set(fig.env="figure") # Latex figure environment
# include packages here!
library(tidyverse)
data %>%
filter(cond %in% c(0,1)) %>%
mutate(cond = case_when(cond == 1 ~ 'Money',
cond == 0 ~ 'NoMoney')) %>%
# compute reporting rate by country and monetary condition
group_by(Country,
cond) %>%
summarize(pct_reported = mean(response)) %>%
# pivot_wider to make those line segments
ungroup %>%
pivot_wider(names_from = cond, values_from = pct_reported) %>%
# reorder Country by the NoMoney reporting rate
mutate(Country = fct_reorder(Country, NoMoney),
label_position = min(Money, NoMoney))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE) # show the code, but not the warnings/errors
knitr::opts_chunk$set(fig.pos = 'p') # Places figures on pages separate from text
knitr::opts_chunk$set(out.width = '100%', dpi=300) # Figure resolution and size
knitr::opts_chunk$set(fig.env="figure") # Latex figure environment
# include packages here!
library(tidyverse)
data <- read_csv('data/behavioral data (csv file).csv')
data %>%
filter(cond %in% c(0,1)) %>%
mutate(cond = case_when(cond == 1 ~ 'Money',
cond == 0 ~ 'NoMoney')) %>%
# compute reporting rate by country and monetary condition
group_by(Country,
cond) %>%
summarize(pct_reported = mean(response)) %>%
# pivot_wider to make those line segments
ungroup %>%
pivot_wider(names_from = cond, values_from = pct_reported) %>%
# reorder Country by the NoMoney reporting rate
mutate(Country = fct_reorder(Country, NoMoney),
label_position = min(Money, NoMoney))
data %>%
filter(cond %in% c(0,1)) %>%
mutate(cond = case_when(cond == 1 ~ 'Money',
cond == 0 ~ 'NoMoney')) %>%
# compute reporting rate by country and monetary condition
group_by(Country,
cond) %>%
summarize(pct_reported = mean(response)) %>%
# pivot_wider to make those line segments
ungroup %>%
pivot_wider(names_from = cond, values_from = pct_reported) %>%
# reorder Country by the NoMoney reporting rate
mutate(Country = fct_reorder(Country, NoMoney),
label_position = min(Money, NoMoney)) %>% View
data %>%
filter(cond %in% c(0,1)) %>%
mutate(cond = case_when(cond == 1 ~ 'Money',
cond == 0 ~ 'NoMoney')) %>%
# compute reporting rate by country and monetary condition
group_by(Country,
cond) %>%
summarize(pct_reported = mean(response)) %>%
# pivot_wider to make those line segments
ungroup %>%
pivot_wider(names_from = cond, values_from = pct_reported) %>%
# reorder Country by the NoMoney reporting rate
mutate(Country = fct_reorder(Country, NoMoney),
label_position = pmin(Money, NoMoney)) %>% View
data %>%
filter(cond %in% c(0,1)) %>%
mutate(cond = case_when(cond == 1 ~ 'Money',
cond == 0 ~ 'NoMoney')) %>%
# compute reporting rate by country and monetary condition
group_by(Country,
cond) %>%
summarize(pct_reported = mean(response)) %>%
# pivot_wider to make those line segments
ungroup %>%
pivot_wider(names_from = cond, values_from = pct_reported) %>%
# reorder Country by the NoMoney reporting rate
mutate(Country = fct_reorder(Country, NoMoney)) %>%
# compute label position (minimum reporting rate - character length)
mutate(label_position = pmin(Money, NoMoney) - nchar(Country)) %>% View
data$Country
data$Country %>% nchar
data$Country %>% as.factor %>% nchar
data %>%
filter(cond %in% c(0,1)) %>%
mutate(cond = case_when(cond == 1 ~ 'Money',
cond == 0 ~ 'NoMoney')) %>%
# compute reporting rate by country and monetary condition
group_by(Country,
cond) %>%
summarize(pct_reported = mean(response)) %>%
# pivot_wider to make those line segments
ungroup %>%
pivot_wider(names_from = cond, values_from = pct_reported) %>%
# reorder Country by the NoMoney reporting rate
mutate(Country = fct_reorder(Country, NoMoney)) %>%
# compute label position (minimum reporting rate - character length)
mutate(label_position = pmin(Money, NoMoney) - nchar(as.character(Country))) %>% View
names(data)
lm1 <- lm(response ~ age + male + Country, data = data)
apsrtable(lm1, Sweave = TRUE)
install.packages('rticles')
